### LINES
# See http://matplotlib.org/api/artist_api.html#module-matplotlib.lines for more
# information on line properties.
lines.linewidth   : 1.0     # line width in points
lines.linestyle   : -       # solid line
lines.color       : black    # has no affect on plot(); see axes.prop_cycle
lines.marker      : None    # the default marker
lines.markeredgewidth  : 0.5    # the line width around the marker symbol
lines.markersize  : 4            # markersize, in points
lines.dash_joinstyle : miter        # miter|round|bevel
lines.dash_capstyle : butt          # butt|round|projecting
lines.solid_joinstyle : miter       # miter|round|bevel
lines.solid_capstyle : projecting   # butt|round|projecting
lines.antialiased : True         # render lines in antialiased (no jaggies)

font.family         : serif
font.style          : normal
font.variant        : normal
font.weight         : medium
font.stretch        : normal
# note that font.size controls default text sizes.  To configure
# special text sizes tick labels, axes, labels, title, etc, see the rc
# settings for axes and ticks. Special text sizes can be defined
# relative to font.size, using the following values: xx-small, x-small,
# small, medium, large, x-large, xx-large, larger, or smaller
font.size           : 10
font.serif          : Bitstream Vera Serif, New Century Schoolbook, Century Schoolbook L, Utopia, ITC Bookman, Bookman, Nimbus Roman No9 L, Times New Roman, Times, Palatino, Charter, serif
font.sans-serif     : Bitstream Vera Sans, Lucida Grande, Geneva, Lucid, Arial, Helvetica, Avant Garde, sans-serif
font.cursive        : Apple Chancery, Textile, Zapf Chancery, Sand, Script MT, Felipa, cursive
font.fantasy        : Comic Sans MS, Chicago, Charcoal, Impact, Western, Humor Sans, fantasy
font.monospace      : Bitstream Vera Sans Mono, Andale Mono, Nimbus Mono L, Courier New, Courier, Fixed, Terminal, monospace

### TEXT
# text properties used by text.Text.  See
# http://matplotlib.org/api/artist_api.html#module-matplotlib.text for more
# information on text properties

text.color          : black

### LaTeX customizations. See http://wiki.scipy.org/Cookbook/Matplotlib/UsingTex
text.usetex         : False  # use latex for all text handling. The following fonts
                              # are supported through the usual rc parameter settings:
                              # new century schoolbook, bookman, times, palatino,
                              # zapf chancery, charter, serif, sans-serif, helvetica,
                              # avant garde, courier, monospace, computer modern roman,
                              # computer modern sans serif, computer modern typewriter
                              # If another font is desired which can loaded using the
                              # LaTeX \usepackage command, please inquire at the
                              # matplotlib mailing list
text.latex.unicode : False # use "ucs" and "inputenc" LaTeX packages for handling
                            # unicode strings.
text.latex.preamble : \usepackage[bitstream-charter]{mathdesign} # IMPROPER USE OF THIS FEATURE WILL LEAD TO LATEX FAILURES
                            # AND IS THEREFORE UNSUPPORTED. PLEASE DO NOT ASK FOR HELP
                            # IF THIS FEATURE DOES NOT DO WHAT YOU EXPECT IT TO.
                            # preamble is a comma separated list of LaTeX statements
                            # that are included in the LaTeX document preamble.
                            # An example:
                            # text.latex.preamble : \usepackage{bm},\usepackage{euler}
                            # The following packages are always loaded with usetex, so
                            # beware of package collisions: color, geometry, graphicx,
                            # type1cm, textcomp. Adobe Postscript (PSSNFS) font packages
                            # may also be loaded, depending on your font settings

text.dvipnghack : None      # some versions of dvipng don't handle alpha
                             # channel properly.  Use True to correct
                             # and flush ~/.matplotlib/tex.cache
                             # before testing and False to force
                             # correction off.  None will try and
                             # guess based on your dvipng version

text.hinting : auto   # May be one of the following:
                       #   'none': Perform no hinting
                       #   'auto': Use freetype's autohinter
                       #   'native': Use the hinting information in the
                       #             font file, if available, and if your
                       #             freetype library supports it
                       #   'either': Use the native hinting information,
                       #             or the autohinter if none is available.
                       # For backward compatibility, this value may also be
                       # True === 'auto' or False === 'none'.
text.hinting_factor : 8 # Specifies the amount of softness for hinting in the
                         # horizontal direction.  A value of 1 will hint to full
                         # pixels.  A value of 2 will hint to half pixels etc.

text.antialiased : True # If True (default), the text will be antialiased.
                         # This only affects the Agg backend.

# The following settings allow you to select the fonts in math mode.
# They map from a TeX font name to a fontconfig font pattern.
# These settings are only used if mathtext.fontset is 'custom'.
# Note that this "custom" mode is unsupported and may go away in the
# future.
mathtext.cal : cursive
mathtext.rm  : serif
mathtext.tt  : monospace
mathtext.it  : serif:italic
mathtext.bf  : serif:bold
mathtext.sf  : sans
mathtext.fontset : cm # Should be 'cm' (Computer Modern), 'stix',
                       # 'stixsans' or 'custom'
mathtext.fallback_to_cm : True  # When True, use symbols from the Computer Modern
                                 # fonts when a symbol can not be found in one of
                                 # the custom math fonts.

mathtext.default : it # The default font to use for math.
                       # Can be any of the LaTeX font names, including
                       # the special name "regular" for the same font
                       # used in regular text.

### AXES
# default face and edge color, default tick sizes,
# default fontsizes for ticklabels, and so on.  See
# http://matplotlib.org/api/axes_api.html#module-matplotlib.axes
axes.facecolor      : white   # axes background color
axes.edgecolor      : gray   # axes edge color
axes.linewidth      : .5     # edge linewidth
axes.grid           : False   # display grid or not
axes.titlesize      : 10   # fontsize of the axes title
axes.labelsize      : 10  # fontsize of the x any y labels
axes.labelpad       : 5.0     # space between label and axis
axes.labelweight    : normal  # weight of the x and y labels
axes.labelcolor     : black
axes.axisbelow      : False   # whether axis gridlines and ticks are below
                              # the axes elements (lines, text, etc)

axes.formatter.limits : -7, 7 # use scientific notation if log10
                              # of the axis range is smaller than the
                              # first or larger than the second
axes.formatter.use_locale : False # When True, format tick labels
                                  # according to the user's locale.
                                  # For example, use ',' as a decimal
                                  # separator in the fr_FR locale.
axes.formatter.use_mathtext : False # When True, use mathtext for scientific
                                    # notation.
axes.formatter.useoffset      : True    # If True, the tick label formatter
                                         # will default to labeling ticks relative
                                         # to an offset when the data range is very
                                         # small compared to the minimum absolute
                                         # value of the data.
axes.unicode_minus  : True    # use unicode for the minus symbol
                               # rather than hyphen.  See
                               # http://en.wikipedia.org/wiki/Plus_and_minus_signs#Character_codes
axes.prop_cycle    : cycler('color', ['1f77b4', 'ff7f0e', '2ca02c', 'd62728', '9467bd', '8c564b', 'e377c2', '7f7f7f', 'bcbd22', '17becf'])
                                            # color cycle for plot lines
                                            # as list of string colorspecs:
                                            # single letter, long name, or
                                            # web-style hex

axes.spines.left   : True   # display axis spines
axes.spines.bottom : True
axes.spines.top    : False
axes.spines.right  : False

### TICKS
# see http://matplotlib.org/api/axis_api.html#matplotlib.axis.Tick
xtick.major.size     : 2      # major tick size in points
xtick.minor.size     : 1      # minor tick size in points
xtick.major.width    : 0.5    # major tick width in points
xtick.minor.width    : 0.5    # minor tick width in points
xtick.major.pad      : 4      # distance to major tick label in points
xtick.minor.pad      : 4      # distance to the minor tick label in points
xtick.color          : k      # color of the tick labels
xtick.labelsize      : 10 # fontsize of the tick labels
xtick.direction      : in     # direction: in, out, or inout

ytick.major.size     : 2      # major tick size in points
ytick.minor.size     : 1      # minor tick size in points
ytick.major.width    : 0.5    # major tick width in points
ytick.minor.width    : 0.5    # minor tick width in points
ytick.major.pad      : 4      # distance to major tick label in points
ytick.minor.pad      : 4      # distance to the minor tick label in points
ytick.color          : k      # color of the tick labels
ytick.labelsize      : 10 # fontsize of the tick labels
ytick.direction      : in     # direction: in, out, or inout


### GRIDS

### Legend
legend.fancybox      : False  # if True, use a rounded box for the
                               # legend, else a rectangle
legend.numpoints     : 1      # the number of points in the legend line
legend.fontsize      : 10
legend.borderpad     : 0.5    # border whitespace in fontsize units
legend.markerscale   : 1.0    # the relative size of legend markers vs. original
# the following dimensions are in axes coords
legend.labelspacing  : 0.3    # the vertical space between the legend entries in fraction of fontsize
legend.handlelength  : 2.     # the length of the legend lines in fraction of fontsize
legend.handleheight  : 0.7     # the height of the legend handle in fraction of fontsize
legend.handletextpad : 0.8    # the space between the legend line and legend text in fraction of fontsize
legend.borderaxespad : 0.5   # the border between the axes and legend edge in fraction of fontsize
legend.columnspacing : 2.    # the border between the axes and legend edge in fraction of fontsize
legend.shadow        : False
legend.frameon       : False   # whether or not to draw a frame around legend
legend.framealpha    : None    # opacity of of legend frame
legend.scatterpoints : 3 # number of scatter points

### FIGURE
# See http://matplotlib.org/api/figure_api.html#matplotlib.figure.Figure
figure.facecolor : white    # figure facecolor; 0.75 is scalar gray
figure.edgecolor : white   # figure edgecolor

# The figure subplot parameters.  All dimensions are a fraction of the
# figure width or height
figure.subplot.left    : 0.125  # the left side of the subplots of the figure
figure.subplot.right   : 0.9    # the right side of the subplots of the figure
figure.subplot.bottom  : 0.1    # the bottom of the subplots of the figure
figure.subplot.top     : 0.9    # the top of the subplots of the figure
figure.subplot.wspace  : 0.3    # the amount of width reserved for blank space between subplots
figure.subplot.hspace  : 0.3    # the amount of height reserved for white space between subplots

